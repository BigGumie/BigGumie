import pyttsx3
import speech_recognition as sr
import subprocess as sp
import pywhatkit
import datetime
import wikipedia
import pyjokes
import sys
from googlesearch import search

engine = pyttsx3.init()
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)
r = sr.Recognizer() 

def SpeakText(command):
      
    engine = pyttsx3.init()
    engine.say(command) 
    engine.runAndWait()

#Inicio a libraria para fazer o script falar
def talk(text):
    engine.say(text)
    engine.runAndWait()

def Commands():
    try:
                engine.say("I will speak this text")
                Order = input("Writte something: ")
                Order = Order.lower() #Passa todo o que for dito para letras minusculas
        
                if 'lucky' in Order:
                    Order = Order.replace('lucky', '') 
                    print(Order)
                    engine.say("I will speak this text")

    except sr.RequestError as e:
        print("Could not request results; {0}".format(e))

    except sr.UnknownValueError:
        print("unknown error occured")
    return Order

def lucky_commands():

    order=Commands()
    print(order)

    #Caso o utilizador queira abrir algum aplicativo o programa vai reconhecer a palavra chave
    #É capaz de abrir: Calculadora, Notepad, write e paint
    if "open" in order: 
        if "calculator" in order: 
            sp.Popen('C:\\Windows\\System32\\calc.exe')
        if "notepad" in order:
            sp.Popen('C:\\Windows\\System32\\notepad.exe')
        if "wordpad" in order:
            sp.Popen('C:\\Windows\\System32\\write.exe')
        if "paint" in order:
            sp.Popen('C:\\Windows\\system32\\mspaint.exe')
    
    #Algumas "dad jokes" caso o utilizador esteja numa para se rir
    elif "tell me a joke" in order:
        print(pyjokes.get_joke())
        #engine.say("I will speak this text")

    #Diz a horas
    elif "tell me the time" in order:
        time = datetime.datetime.now().strftime('%H:%M')
        print("The current time is "+time)

    #Pesquisa no google
    elif "search" in order:
        query = order
        for j in search(query, tld="co.in", num=10, stop=10, pause=2):
            print(j)

    #Dizer link a link e a pessoa reponder com "yes" ou "no"

    #Capaz de pesquisar acerca de alguma figura publica
    elif 'who is' in order:
        person = order.replace('who is', '')
        info = wikipedia.summary(person, 1)
        print("According to wikipedia, "+info)

    #Capaz de pesquisar algum topico
    elif 'what is' in order:
        subject = order.replace('what is', '')
        info = wikipedia.summary(subject, 1)
        print("According to wikipedia, "+info)
    
    #Vai ao youtube e abre a musica pedida pelo o utilizador
    elif 'play' in order:
        song = order.replace('play', '')
        print('playing ' + song)
        pywhatkit.playonyt(song)
    
    #A palavra chave para fechar o script é shutdown
    elif "shut down" in order:
            print("Goodbye")
            sys.exit()

    else: print('Please repeat')

        
while True:
    lucky_commands()

#Fazer contas
#Akinator se possivel
#Fazer o sistema capaz de pesquisar algo no google
#Fazer o sistema capaz de tocar musica no youtube ou spotify
